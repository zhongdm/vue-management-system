{"version":3,"sources":["webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/coord/single/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/zrender/lib/svg/helper/ShadowManager.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyAction.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/zrender/lib/Handler.js"],"names":["BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","Object","prototype","toString","arrayProto","Array","nativeForEach","forEach","nativeFilter","filter","nativeSlice","slice","nativeMap","map","nativeReduce","reduce","methods","clone","source","result","typeStr","call","isPrimitive","i","len","length","Ctor","constructor","from","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","defaults","overlay","_ctx","createCanvas","each","obj","cb","context","bind","func","args","arguments","apply","concat","value","type","nodeType","ownerDocument","document","createElement","primitiveKey","HashMap","isArr","thisMap","this","visit","set","get","removeKey","exports","$override","name","fn","mergeAll","targetAndSources","extend","getContext","indexOf","array","inherits","clazz","baseClazz","clazzPrototype","F","prop","superClass","mixin","isArrayLike","data","push","memo","find","curry","isFunction","isString","isTypedArray","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","Function","normalizeCssArray","val","assert","condition","message","Error","trim","str","replace","setAsPrimitive","createHashMap","concatArray","a","b","newArray","offset","noop","__webpack_require__","__DEV__","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","ComponentModel","SeriesModel","ComponentView","ChartView","graphic","modelUtil","throttle","seriesColor","aria","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","MessageCenter","ECharts","dom","theme","opts","themeStorage","id","group","_dom","zr","_zr","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","ecInstance","coordSysMgr","api","_api","getCoordinateSystems","getComponentByElement","el","modelInfo","__ecComponentInfo","_model","getComponent","mainType","index","parent","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","_pendingActions","animation","on","_onframe","ecIns","trigger","isFinished","unfinished","bindRenderedEvent","off","one","echartsProto","doConvertPixel","methodName","finder","ecModel","coordSysList","parseFinder","coordSys","_disposed","scheduler","silent","prepare","updateMethods","update","flushPendingActions","triggerUpdatedEvent","remainTime","startTime","Date","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","getSvgDataUrl","svgSupported","list","storage","getDisplayList","stopAnimation","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","component","view","__viewId","ignore","url","getType","toDataURL","getConnectedDataURL","groupId","mathMin","Math","min","mathMax","max","connectedGroups","left","Infinity","top","right","bottom","canvasList","instances","chart","canvas","boundingRect","getBoundingClientRect","targetCanvas","item","img","Image","style","x","y","image","add","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","model","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","seriesModel","getData","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","payload","restoreData","create","clearColorPalette","render","setBackgroundColor","colorArr","parse","stringify","performPostUpdateFuncs","updateTransform","componentDirtyList","componentView","__alive","seriesDirtyMap","eachSeries","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","updateLayout","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","query","excludeSeriesId","normalizeToArray","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","pop","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","pendingActions","shift","isComponent","viewList","viewMap","doPrepare","viewId","classType","getClass","__id","componentIndex","renderTask","dispose","remove","splice","dirtyList","updateZ","renderComponents","updatePayload","dirty","perform","getPerformArgs","blendMode","traverse","isGroup","blend","setStyle","eachPendingDisplayable","displayable","updateBlend","elCount","node","useHoverLayer","updateHoverLayerStatus","postUpdateFuncs","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","dispatchAction","opt","browser","weChat","appendData","params","seriesIndex","getSeriesByIndex","MOUSE_EVENT_NAMES","z","zlevel","eveName","e","dataModel","getDataParams","dataType","eventData","actionType","eventType","isDisposed","clear","series","setAttribute","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","disConnect","disconnect","getInstanceByDom","getAttribute","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerAction","test","registerVisual","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","version","dependencies","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","getMap","dataTool","___ec_export","pathTool","matrix","vector","Path","Transformable","ZImage","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","round","EMPTY_OBJ","makePath","pathData","rect","layout","path","createFromString","getBoundingRect","centerGraphic","resizePath","aspect","mergePath","applyTransform","m","calculateTransform","subPixelOptimize","position","lineWidth","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","insideRollback","textFill","textStroke","textStrokeWidth","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","autoColor","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyle","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","isRectText","textPosition","getShallow","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","parentModel","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textBorderColor","textBorderWidth","originalTextPosition","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","transform","invert","getLocalTransform","extendShape","extendPath","extendFromString","makeImage","imageUrl","onload","subPixelOptimizeLine","param","shape","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","showEmphasis","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","text","setText","labelModel","defaultColor","getFont","gTextStyleModel","join","initProps","getTransform","ancestor","mat","identity","mul","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","elMap","elMap1","anid","oldEl","newProp","getAnimatableProps","rotation","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","RADIAN_EPSILON","TIME_REG","quantityExponent","floor","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","idx","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","parseDate","exec","hour","toUpperCase","UTC","quantity","nice","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","DUMMY_COMPONENT_NAME_PREFIX","isIdInner","cptOption","innerUniqueIndex","has","defaultEmphasis","subOpts","emphasis","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","dataItem","isDataItemOption","mappingToExists","exists","newCptOptions","exist","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","isNameSpecified","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","isData","queryDataIndex","indexOfName","makeInner","random","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","global","dev","formatUtil","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","box","vbox","hbox","getLayoutRect","positionInfo","containerRect","margin","containerWidth","containerHeight","verticalMargin","horizontalMargin","copyLayoutParams","getAvailableSize","positionElement","h","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","newOption","ignoreSize","hResult","vResult","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","copy","getLayoutParams","ArrayCtor","Float32Array","sqrt","lenSquare","lengthSquare","distance","v1","v2","dist","distanceSquare","distSquare","out","scaleAndAdd","div","dot","scale","s","normalize","d","negate","lerp","t","textContain","numberUtil","replaceReg","replaceMap","&","<",">","\"","'","encodeHTML","c","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","pad","substr","truncateText","getTextRect","addCommas","toCamelCase","upperCaseFirst","group1","charAt","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","formatTplSimple","getTooltipMarker","extraCssText","formatTime","isUTC","date","utc","M","S","capitalFirst","lt","rb","lb","rt","vec2","v2ApplyTransform","union","other","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","contain","plain","_default","module","Displayable","PathProxy","pathContain","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","Model","componentUtil","_clazz","enableClassManagement","boxLayoutMixin","inner","defaultOption","dependentModels","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","mergeOption","optionUpdated","newCptOption","isInit","fields","optList","Class","getReferringComponents","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","deps","getClassesByMainType","Clazz","unshift","wx","getSystemInfoSync","os","wxa","touchEventsSupported","worker","navigator","ua","firefox","ie","edge","SVGRect","pointerEventsSupported","detect","userAgent","_format","colorPaletteMixin","dataFormatMixin","_layout","createTask","_sourceHelper","prepareSource","getSource","retrieveRawValue","legendDataProvider","visualColorAccessPath","dataTask","dataTaskCount","reset","dataTaskReset","getInitialData","wrapData","dataBeforeProcessed","autoSeriesName","themeSubType","hasClass","fillDataTextStyle","newSeriesOption","label","getRawData","task","getCurrentTask","getLinkedData","setData","modifyOutputEnd","setOutputEnd","outputData","getBaseAxis","formatTooltip","multipleSeries","formatSingleValue","tooltipDims","mapDimension","tooltipDimLen","getRawValue","isValueArr","formattedValue","vertially","dimItem","getDimensionInfo","tooltip","displayName","setEachItem","dim","dimInfo","otherDims","dimType","dimHead","valStr","formatArrayValue","colorEl","getName","seriesName","animationEnabled","getColorFromPalette","scope","requestColorNum","coordDimToDataDim","coordDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","getTooltipPosition","pipeTask","preventIncremental","pipelineContext","dataDims","nameArr","dataDim","getSeriesAutoName","cloneShallow","dataTaskProgress","end","CHANGABLE_METHODS","wrapMethod","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","Triangle","cx","cy","moveTo","lineTo","closePath","Diamond","Pin","r","angle","asin","tanX","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","SymbolClz","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","createSymbol","keepAspect","symbolPath","setColor","DataDiffer","Source","_dataProvider","defaultDimValueGetters","DefaultDataProvider","summarizeDimensions","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","propName","_calculationInfo","List","hostModel","dimensionInfos","dimensionNames","invertedIndicesMap","dimensionInfo","dimensionName","coordDimIndex","createInvertedIndices","_dimensionInfos","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawData","_rawExtent","_extent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","getRawValueFromStore","dimIndex","rawIndex","chunkSize","chunkIndex","chunkOffset","chunk","ordinalMeta","categories","getRawIndexWithoutIndices","getRawIndexWithIndices","getId","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","originalChunk","newDimStore","hasItemOption","getDimension","getDimensionsOnCoord","dataDimsOnCoord","dimensionsSummary","encodeFirstDimNotExtra","dims","initData","nameList","dimValueGetter","isInstance","_nameRepeatCount","defaultDimValueGetter","sourceFormat","_dimValueGetter","_initDataFromProvider","pure","getProvider","rawData","start","persistent","nameDimIdx","dimLen","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","itemName","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","getItem","dimStorage","dimRawExtent","nameDim","nameDimChunk","clean","invertedIndices","getIndices","indices","thisCount","newIndices","buffer","getRawIndex","getByRawIndex","rawIdx","dimStore","_getFast","getValues","getDataExtent","dimData","initialExtent","dimExtent","currEnd","getApproximateExtent","setApproximateExtent","extent","getCalculationInfo","setCalculationInfo","getSum","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","rawDataIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","getRawDataItem","contextCompat","dimSize","filterSelf","dim0","keep","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","min2","max2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkOffset","getItemModel","otherList","thisList","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","OrdinalScale","IntervalScale","Scale","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","getCategories","setBlank","getOrdinalMeta","getNeedCrossZero","isBaseAxisAndHasBarSeries","barSeriesModels","axis","barWidthAndOffset","adjustedScale","axisExtent","axisLength","barsOnCurrentAxis","undefined","minOverflow","maxOverflow","totalOverFlow","oldRange","overflowBuffer","adjustScaleForOverflow","makeLabelFormatter","labelFormatter","getLabelModel","categoryTickStart","tickValue","getAxisRawValue","tick","getLabel","niceScaleExtent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","ifAxisCrossZero","estimateLabelUnionRect","axisModel","isBlank","realNumberScaleTicks","tickCount","isCategory","categoryScaleExtent","getTicks","textRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","axisLabelModel","step","ceil","unrotatedSingleRect","singleRect","coordinateSystemCreators","_coordinateSystems","coordinateSystems","creater","coordinateSystemCreator","imageHelper","_util","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","DEFAULT_FONT","font","textLines","l","measureText","adjustTextX","adjustTextY","ellipsis","options","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","parsePlainText","padding","truncate","lineHeight","lines","outerHeight","truncOuterHeight","truncOuterWidth","outerWidth","parseRichText","contentBlock","lastIndex","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","tokens","tokenStyle","token","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","getRichTextRect","getPlainTextRect","adjustTextPositionOnRect","halfHeight","makeFont","textFont","isDimensionStacked","stackedDim","enableDataStack","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","byIndex","stackedCoordDimension","mayStack","isExtraCoord","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","getStackedDimension","targetDim","createDimensions","SOURCE_FORMAT_ORIGINAL","getDimensionTypeByAxis","getCoordSysDefineBySeries","seriesDataToSource","coordSysDimDefs","coordSysName","registeredCoordSys","coordSysDefine","coordSysDims","axisMap","firstCategoryDimIndex","hasNameEncode","dimInfoList","coordDimensions","generateCoord","categoryAxisModel","categoryAxisMap","stackCalculationInfo","sampleItem","firstDataNotNull","isNeedCompleteOrdinalData","itemOpt","dimName","clazzUtil","createRenderPlanner","renderPlanner","Chart","renderTaskPlan","renderTaskReset","highlight","toggleHighlight","downplay","removeAll","incrementalPrepareRender","incrementalRender","chartProto","elSetState","state","childCount","progressiveRender","progressMethodMap","progress","forceFirstProgress","TYPE_DELIMITER","IS_CONTAINER","ret","classBase","superCall","superApply","RootClass","mandatoryMethods","proto","ExtendedClass","Clz","classAttr","entity","registerClass","checkClassType","container","makeContainer","componentMainType","throwWhenNotFound","o","getAllClassMainTypes","types","hasSubTypes","originalExtend","Dispatcher","isDomLevel2","addEventListener","MOUSE_EVENT_REG","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","stop","preventDefault","stopPropagation","cancelBubble","returnValue","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","attachEvent","removeEventListener","detachEvent","notLeftMouse","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","g","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","iv","op","ep","fname","alpha","hsla2rgba","hsla","rgba","fastLerp","normalizedValue","colors","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","arrColor","level","toHex","modifyHSL","H","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","rgba2hsla","modifyAlpha","ctor","_number","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","inverse","onBand","fixExtentWithBands","nTick","coord","containData","dataToCoord","coordToData","pointToData","getTicksCoords","tickModel","getTickModel","ticks","ticksCoords","alignWithLabel","tickCategoryInterval","ticksLen","last","ticksItem","fixOnBandTicksCoords","getViewLabels","labels","getBandWidth","isHorizontal","getRotate","_vector","v2Create","v2DistSquare","mathPow","mathSqrt","EPSILON","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","quadraticAt","cubicDerivativeAt","cubicRootAt","roots","A","C","n","t1","disc","K","t2","discSqrt","Y1","Y2","T","theta","acos","ASqrt","tmp","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_t","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","zrColor","CATEGORY_DEFAULT_VISUAL_INDEX","VisualMapping","mappingMethod","thisOption","_normalizeData","normalizers","visualHandler","visualHandlers","applyVisual","getColorMapper","_doMap","normalizeVisualRange","pieceList","hasSpecialVisual","piece","originIndex","preprocessForPiecewise","categoryMap","cate","visualArr","setVisualToOption","preprocessForSpecifiedCategory","mapValueToVisual","normalized","getNormalizer","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","category","piecewise","getSpecifiedVisual","fixed","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","opacity","makeDoMap","liftZ","symbol","getter","setter","symbolCfg","doMapToArray","symbolSize","applyValue","sourceExtent","findPieceIndex","pieceIndex","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","callback","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","getPathToRoot","parentNode","reverse","retrieveTargetInfo","validPayloadTypes","root","tree","targetNode","contains","targetNodeId","getNodeById","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","echarts","axisPointerModelHelper","AxisView","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","force","axisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","axisPointerModel","getAxisPointerModel","axisPointerClazz","registerAxisPointerClass","matrixUtil","makeAxisEventDataBase","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineStyle","lineCap","getLineStyle","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","pos","axisTickLabel","tickEls","axisBuilder","lineStyleModel","tickLen","tickCoord","tickEl","buildAxisTick","labelEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","axisLabelShow","labelMargin","labelRotation","labelLayout","innerTextLayout","rawCategoryData","isSilent","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textColor","getTextColor","textEl","targetType","decomposeTransform","buildAxisLabel","axisName","axisNameAvailableWidth","nameLocation","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","endTextLayout","truncateOpt","nameTruncateMaxWidth","truncatedText","tooltipOpt","formatterParams","__fullText","__truncatedText","show","content","formatter","axisRotation","current","firstRect","nextRect","mRotationBack","seriesType","defaultSymbolType","legendSymbol","performRawSeries","symbolKeepAspect","isSeriesFiltered","hasCallback","dataEach","rawValue","itemModel","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","execute","newDataIndexMap","oldDataKeyArr","newDataKeyArr","toolbox","title","polygon","lineX","lineY","dataView","lang","dataZoom","zoom","back","magicType","bar","stack","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","radar","treemap","boxplot","candlestick","heatmap","parallel","graph","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","allData","partialData","ORIGIN_METHOD","RATE","THROTTLE_TYPE","delay","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","_sourceType","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","_source","_data","_offset","_dimSize","providerMethods","seriesLayoutBy","providerProto","arrayRows_column","startIndex","appendDataSimply","arrayRows_row","row","objectRows","countSimply","getItemSimply","keyedColumns","dimensionsDefine","col","newData","newCol","oldCol","typedArray","rawValueGetters","arrayRows","getRawValueSimply","getDimValueSimply","converDataValue","parseAndCollect","retrieveRawAttr","arrySlice","_$handlers","_h","newList","argLen","triggerWithContext","dimensionsInfo","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","completeDimensions","dimsDef","encodeDef","encodeDefine","dimCount","dimensionsCount","generateCoordCount","originalLarge","large","originalProgressive","progressive","curve","bbox","CMD","Q","Z","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","toStatic","lineDashSum","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","excludes","includes","dataZoomModel","getTargetCoordInfo","coordSysLists","eachTargetAxis","dimNames","axisIndex","coordModel","store","coordIndex","axisModels","save","helper","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","axisTrigger","link","coordSysAxesInfo","collect","getSpanSign","handleEnds","handleIndex","sign","restrict","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","legendModels","findComponents","isSelected","gridModel","getRect","getItemStyle","xAxis","yAxis","grid","isLargeRender","stackResultDim","segCount","tmpIn","tmpOut","dataToPoint","SymbolDraw","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","isIgnore","clipShape","normalizeUpdateOpt","makeSeriesScope","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","hoverLabelModel","cursorStyle","updateData","oldData","SymbolCtor","seriesScope","newIdx","symbolEl","oldIdx","fadeOut","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","incremental","enableAnimation","OTHER_DIMENSIONS","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","coordDimArr","defaultTooltip","otherDim","otherDimArr","dimArr","encodeLabel","encodeTooltip","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SERIES_LAYOUT_BY_COLUMN","SERIES_LAYOUT_BY_ROW","fromDataset","dimensionsDetectCount","textHelper","normalizeTextStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","needDrawText","renderText","getStroke","Style","Element","RectText","__clipPaths","invisible","draggable","dragging","culling","cursor","inplace","afterBrush","rectContain","animateStyle","useStyle","src","_image","createOrUpdateImage","sWidth","sHeight","drawImage","debugMode","hasKeys","createVisualMappings","stateList","supplementVisualOption","visualMappings","Creater","mappings","__hidden","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","keys","getValueState","visualTypesMap","eachItem","valueOrIndex","rawDataItem","visualMap","valueState","incrementalApplyVisual","axisHelper","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","viewWidth","viewHeight","confineInContainer","bgColor","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","eventTool","interactionMutex","RoamController","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","setPointerChecker","enable","controlType","disable","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","_dragging","isPinching","_pinching","_x","_y","checkKeyBinding","gestureEvent","isTaken","oldX","oldY","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","setting","Geo","resizeGeo","geoModel","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","center","aspectScale","useCenterAndSize","viewRect","getBoxLayoutParams","setViewRect","setCenter","setZoom","setGeoCoords","geo","geoCoord","addGeoCoord","geoCreator","geoList","mapData","zoomLimit","geoIndex","mapModelGroupBySeries","eachSeriesByType","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","getFilledRegions","originRegionArr","nameMap","regionsArr","dataNameMap","getTargetSeries","paletteScope","seiresModelMap","__paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","axesInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","axisPointerEnabled","coordSysKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","triggerTooltip","axisPointerShow","snap","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","crossStyle","makeAxisPointerModel","involveSeries","axisInfo","useHandle","seriesModels","groupIndex","linkOption","getLinkGroupIndex","linkGroup","mapper","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","collectSeriesInfo","axisDefault","OrdinalMeta","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","createByAxisModel","registerSubTypeDefaulter","getDefaultLabel","symbolProto","getSymbolSize","getScale","driftSymbol","drift","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","elStyle","symbolInnerColor","z2Origin","__z2Origin","useNameLabel","onEmphasis","ratio","onNormal","keepLabel","STACK_PREFIX","LargeArr","getSeriesStackId","getAxisKey","isOnCartesian","isInLargeMode","barSeries","seriesInfoList","baseAxis","bandWidth","barWidth","barMaxWidth","barGap","barCategoryGap","axisKey","stackId","doCalBarWidthAndOffset","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","largeLayout","cartesian","valueAxis","getOtherAxis","valueDim","baseDim","valueAxisHorizontal","valueDimIdx","largePoints","valuePair","valueAxisStart","getValueAxisStart","stacked","getAxesOnZeroOf","toGlobalCoord","getGlobalExtent","getLayoutOnAxis","widthAndOffsets","offsetCenter","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","isValueAxisH","baseValue","baseCoord","roundNumber","_interval","_intervalPrecision","thisExtent","unionExtent","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","_setting","getSetting","unionExtentFromData","_isBlank","Component","componentProto","normalizeDimensionsDefine","arrayRowsTravelFirst","maxLoop","doGuessOrdinal","sample","detectValue","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","seriesOption","sourceHeader","datasetIndex","getDatasetModel","datasetOption","completeResult","findPotentialName","potentialNameDimIndex","firstIndex","objectRowsCollectDimensions","colArr","completeBySourceData","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","firstNotOrdinal","nameDimIndex","makeDefaultEncode","guessOrdinal","subTypeDefaulters","defaulter","determineSubType","componentTypeMain","dependencyGetter","createDependencyGraphItem","predecessor","successor","topologicalTravel","targetNameList","fullNameList","noEntryList","thisItem","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","Gradient","addColorStop","roundRectHelper","fixShadow","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","textBaseline","applyTextRotation","textOrigin","placeToken","hostEl","lineTop","needDrawBackground","drawBackground","getTextXForPadding","setCtx","getFill","strokeText","fillText","isPlainBg","onBgImageLoaded","getBoxPosition","blockHeiht","baseX","baseY","maxValue","lastIndexOf","__textCotentBlock","boxPos","boxX","boxY","xLeft","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","drawRichText","renderRichText","textX","textY","needDrawBg","renderPlainText","_children","__storage","children","childOfName","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","childRect","guid","Handler","Storage","Painter","Animation","HandlerProxy","useVML","painterCtors","ZRender","rendererType","vml","handerProxy","getViewportRoot","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","config","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","findHover","eventHandler","getInstance","registerPainter","ZText","_graphic","svgPath","svgImage","svgText","Definable","zrId","svgRoot","tagNames","markLabel","domName","_zrId","_svgRoot","_tagNames","_markLabel","_domName","nextId","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","element","onUpdate","addDom","appendChild","removeDom","removeChild","getDoms","doms","tagName","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","getTextSvgElement","__textSvgEl","getSvgElement","__svgEl","svgURI","createElementNS","arrayJoin","NONE","mathRound","PI2","degree","round4","svgEl","bindStyle","isText","pathHasFill","pathHasStroke","lineJoin","miterLimit","pathStr","dataLength","cmdStr","nData","dThetaPositive","isCircle","pathDataToString","svgTextDrawRectText","HTMLImageElement","dw","dh","__imageSrc","setAttributeNS","attrXLink","textSvgEl","getVerticalAlignForSvg","newPos","transformText","transformCoordToGlobal","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","createTextNode","markerGroupMap","markerModel","__keep","markerModelKey","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","numCalculate","markerTypeCalculator","average","valueIndex","valueDataDim","dataDimToCoordDim","baseDataDim","dataTransform","hasXAndY","radiusAxis","angleAxis","dataFilter","hasXOrY","fillLabel","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","html","COORDS","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","nodes","records","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","Polar","_axisHelper","updatePolarScale","polar","getAngleAxis","getRadiusAxis","setAxis","polarCreator","polarList","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","resizePolar","throttleUtil","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","handle","hide","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axisDim","doClear","buildLabel","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","transformable","brushMode","removeOnClick","baseUID","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","createCover","controller","brushOption","cover","coverRenderers","brushType","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","xmin","ymin","xmax","ymax","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","thisGroup","localD","localZero","clipPath","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","defaultBrushType","enableBrush","release","take","doEnableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","oldIndex","newIndex","newBrushOption","unmount","handleDragEnd","currPanel","resetCursor","getLineRenderer","localTrack","ends","xyIndex","otherExtent","getLinearBrushOtherExtent","symbolUtil","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","lineData","setLinePoints","targetShape","cp1","cpx1","cpy1","_createLine","lineProto","beforeUpdate","symbolFrom","symbolTo","invScale","fromPos","pointAt","toPos","tangent","tangentAt","atan2","__position","halfPercent","cp","__verticalAlign","__textAlign","createLine","_updateCommonStl","linePoints","hoverLineStyle","visualColor","visualOpacity","defaultLabelColor","showLabel","hoverShowLabel","rawVal","normalText","emphasisText","labelStyle","linePath","LineGroup","LineDraw","_ctor","lineDrawProto","isPointNaN","pt","lineNeedsDraw","pts","lineDraw","oldLineData","_lineData","doAdd","newLineData","itemEl","doUpdate","_clearIncremental","_incremental","clearDisplaybles","linkList","TreeNode","hostTree","depth","viewChildren","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","order","suppressVisitSub","updateDepthAndHeight","getAncestors","includeSelf","ancestors","getValue","levelModel","getLevelModel","isExpand","getLeavesModel","isAncestorOf","isDescendantOf","getNodeByDataIndex","getNodeByName","clearLayouts","createTree","dataRoot","treeOptions","levels","leaves","listData","dimMax","buildHierarchy","dataNode","addChild","mainData","struct","structAttr","IRRELEVANT_EXCLUDES","onIrrelevantElement","targetCoordSysModel","topTarget","updateSelectedMap","_targetList","_selectTargetMap","targetMap","select","selected","unSelect","toggleSelected","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","otherAxis","onZero","onZeroAxisIndex","canOnZeroToAxis","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","coordBase","axisExtentSum","toLocalCoord","updateAxisTransform","labelUnionRect","axesMapOnDim","getCartesian","coordList","getCartesians","_findConvertTarget","xAxisModel","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","axisPosition","addAxis","isCartesian2D","axesModels","findAxesModels","axesTypes","grids","labelDims","vals","Task","define","_reset","_plan","_onDirty","onDirty","_dirty","taskProto","performArgs","planResult","upTask","_upstream","skip","__pipeline","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","modBy","modDataCount","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","doProgress","outputDueEnd","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","_callingProgress","pipe","downTask","getUpstream","getDownstream","DIMENSION_LABEL_REG","componentSubType","marker","labelProp","Displayble","IncrementalDisplayble","_displayables","_temporaryDisplayables","_cursor","notClear","addDisplayable","notPersistent","addDisplayables","displayables","extremity","xDim","yDim","fromPoints","tx","ty","vec2Min","vec2Max","globalImageCache","imageOnLoad","cachedImgObj","__cachedImgObj","pending","pendingWrap","cbPayload","newImageOrSrc","__zrImageSrc","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","mergeAt","start1","length1","start2","length2","cursor1","cursor2","dest","count1","count2","exit","_minGallop","mergeLow","customCursor","customDest","mergeHigh","mergeRuns","forceMergeRuns","pushRun","_runStart","_runLength","remaining","ts","minRun","minRunLength","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","doCreateNode","urn","win","vmlInited","doc","namespaces","zrvml","createNode","initVML","styleSheets","createStyleSheet","addRule","ATTR","giveStore","newSnapshot","dataZoomId","percentRange","head","snapshot","setSelected","getItemAlign","visualMapModel","itemSize","modelOption","itemAlign","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","autoPositionValues","doRender","renderBackground","getControllerVisual","targetValue","visualCluster","forceState","visualObj","controllerVisuals","visualMapping","convertOpacityToAlpha","positionGroup","visualDefault","active","inactive","visualSolution","replacableOptionKeys","dataBound","inRange","outOfRange","itemWidth","itemHeight","borderColor","contentColor","inactiveColor","borderWidth","textGap","_dataExtent","targetVisuals","resetItemSize","completeVisualOption","resetVisual","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","eachTargetSeries","isTargetSeries","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","getDataDimension","optDim","listDimensions","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","visuals","getVisualMeta","VISUAL_PRIORITY","getColorVisual","resultVisual","mapping","createOnAllSeries","resetDefines","visualMetaList","visualMeta","stops","outerColors","concreteDim","pieces","calculable","splitList","linkedNodesFinder","effectedModels","seriesModelMap","getTargetSeriesModels","overallReset","filterData","valueRange","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","minMax","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","scales","rangeOffset","getSize","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","axisConvert","to","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","layoutBox","boxLayoutParams","viewportSize","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","renderInner","maxSize","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","eachRawSeries","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","dataName","LegendModel","_updateData","legendData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","itemGap","selectedMode","viewHelper","cartesianAxisHelper","CartesianAxisPointer","pixelValue","pointerShapeBuilder","labelInside","currPosition","cursorOtherValue","getAxisDimIndex","shadow","onLeave","record","doEnter","currTrigger","useHandler","dis","pendings","showTip","hideTip","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","unregister","rectBound","positionMap","horizontal","vertical","isPolyline","isLarge","lineCoords","totalCoordsCount","getLineCoordsCount","getLineCoords","curveness","_createPolyline","polylineProto","curveUtil","EffectLine","_updateEffectSymbol","effectLineProto","effectModel","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","_loop","__t","animator","when","during","updateSymbolPosition","done","__p1","__cp1","__p2","createListSimply","seriesModelMixin","_baseAxisDim","addOrdinal","xAxisType","yAxisType","coordDims","baseAxisDimIndex","baseAxisDim","baseAxisType","otherAxisType","newOptionData","newItem","defaultValueDimensions","keysFunction","sortKeysFunction","sortKeys","entries","entriesMap","mapObject","sortKeyFunction","keyFunction","valuesByKey","keyValue","graphicUtil","normalizeRect","localPoints","specifiedXYIndex","brushWidth","targetModel","Parallel","parallelModel","parallelPreprocessor","handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","getSlidedAxisExpandWindow","behavior","axisExpandWindow","triggerOn","circularLayout","nodeData","unitAngle","eachEdge","node1","node2","x12","y12","simpleLayoutEdge","simpleLayout","getGraph","Graph","createListFromArray","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","addEdge","coordSysCtor","edgeData","datas","datasAttr","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","moveSubtree","wl","wr","change","modifier","prelim","defaultSeparation","defaultAncestor","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","getViewRect","DATAS","MAIN_DATA","transferInjection","linkAll","linkSingle","changeInjection","cloneShallowInjection","updateCenterAndZoom","previousZoom","getZoom","getCenter","zoomMin","zoomMax","fixX","fixY","seriesGroup","updateViewOnPan","controllerHost","updateViewOnZoom","newZoom","zoomScale","getStore","resourceKey","userKey","roamHelper","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","otherRegionEl","__regions","region","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","draw","fromView","isGeo","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regions","regionGroup","compoundPath","paths","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","geometries","geometry","exterior","interiors","isDataNaN","itemLayout","_updateController","mapDraw","updateMapSelectHandler","makeActionBase","mouseX","mouseY","getViewRectAfterRoam","TransformDummy","View","_roamTransformable","_rawTransformable","_center","_zoom","doConvert","transformTo","_viewRect","rawTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getRoamTransform","rawTransformMatrix","roamTransform","defaultCenter","roamTransformable","rawTransformable","_rawTransform","noRoam","actionInfos","fixPosition","labelPositionOutside","setLabel","getMarkerPosition","clampData","legendHoverLink","barMinAngle","largeThreshold","progressiveChunkMode","otherAxisOnZeroOf","rawAxisPosition","axisOffset","posBound","onZeroCoord","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","areaStyle","categoryAxis","deduplication","timeAxis","logAxis","logBase","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","getAxisType","extraOption","fixClipWithShadow","v2Copy","cp0","isPointNull","drawSegment","segLen","allLen","dir","smoothMin","smoothMax","smooth","smoothMonotone","connectNulls","prevIdx","prevP","ctrlLen","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","smoothConstraint","ptMin","ptMax","stackedOnPoints","stackedOnSmooth","stackedOnBBox","prepareDataCoordInfo","valueOrigin","valueStart","getValueStart","valueAxisDim","baseDataOffset","dataDimsForPoint","getStackedOnPoint","dataCoordInfo","stackedData","windingLine","isAroundEqual","polygonContain","Region","MAX_NUMBER","loopGeo","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","coordinates","c2","decode","featureObj","fixExtent","_needCollect","needCollect","_deduplication","_map","dedplication","getOrCreateMap","getOrdinal","genName","fromZero","sysDims","dataDimNameMap","coordDimNameMap","optDimCount","sysDimItem","sysDimItemDimsDef","getDimCount","dimDefItem","userDimName","resultItem","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","sysDimItemDimsDefItem","extra","format","_throttle","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","util","echartsAPIList","chartInstance","fetchers","cartesian2d","parallelAxisIndex","fetch","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","paletteNum","getNearestColorPalette","globalCoord","smoothSpline","smoothBezier","controlPoints","cp2","shadowTemp","orignalBrush","modified","clipPaths","x_","normalizeRadian","_l","_a","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","_seriesIndices","_seriesIndicesMap","notMergeColorLayer","colorLayer","themeItem","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","newCptOptionList","existComponent","getComponentsByTypes","ComponentModelClass","createSeriesIndices","cpts","isIdArray","cpt","isNameArray","filterBySubType","q","indexAttr","idAttr","nameAttr","queryCond","components","queryResult","oneSeries","getSeriesByType","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","componentTypes","seiresIndex","isNotTargetSeries","r1","r2","r3","r4","total","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","Pattern","repeat","createPattern","SHADOW_PROPS","STYLE_COMMON_PROPS","createLinearGradient","createRadialGradient","styleProto","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","LinkedList","linkedListProto","insert","entry","Entry","insertEntry","LRU","_list","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","Clip","arraySlice","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","easing","oneTrackDone","keyframes","forceAnimate","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","lastValue","getArrayDim","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","clip","life","_delay","onframe","frame","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","getClips","Animatable","afterUpdate","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","idStart","_echarts","_export","ShadowManager","hasShadow","addWithoutUpdate","svgElement","_shadowDom","_shadowDomId","updateDom","domChild","blur","stdDeviation","ClippathManager","parentEl","clipPathEl","svgProxy","pathEl","cloneNode","_textDom","zrLog","GradientManager","gradient","Diff","buildValues","componentPos","componentLen","oldPos","added","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","pushComponent","commonCount","tokenize","arrayDiff","parseInt10","checkParentAvailable","insertAfter","prevSibling","prepend","SVGPainter","_opts","cssText","gradientManager","clipPathManager","shadowManager","viewport","_viewport","_visibleList","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","_paintList","background","visibleList","listLen","newVisibleList","prevSvgElement","textSvgElement","_getDefs","display","_getSize","_width","_height","viewportStyle","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","outerHTML","vmlCore","VMLPainter","vmlViewport","vmlRoot","_vmlRoot","_vmlViewport","onRemove","onAdd","_firstPaint","__alreadyNotVisible","brushVML","_getWidth","_getHeight","vmlViewportStyle","currentStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","Z2","initRootElStyle","coordsize","coordorigin","rgb2Str","append","getZIndex","setColorAndOpacity","updateFillAndStroke","vmlEl","zrEl","isFill","gradientType","focus","expansion","rectWidth","rectHeight","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateFillNode","dashstyle","updateStrokeNode","_vmlEl","needTransform","strokeEl","weight","nPoint","zIndex","removeRectText","appendRectText","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sh","hasCrop","vmlElStyle","hasRotation","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","body","ex","offsetWidth","fromTextEl","fontString","variant","fontVariant","family","getFontStyle","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","coords","textVmlElStyle","string","String","history","featureManager","restoreLang","Restore","icon","onclick","sliderMove","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","_isZoomActive","featureModel","zoomActive","dataZoomSelectActive","setIconStatus","brushTargetManager","retrieveAxisSetting","updateZoomBtnStatus","updateBackBtnStatus","nextActive","_dispatchZoomAction","setBatch","found","dzModel","findDataZoom","minMaxSpan","getMinMaxSpan","dataZoomOpts","toolboxOpt","feature","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","$fromToolbox","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","getContentFromModel","tables","seriesGroupByCategoryAxis","otherSeries","meta","groupSeries","headers","columns","items","assembleOtherSeries","itemSplitRegex","RegExp","parseContents","blockMetaList","blocks","isTSVFormat","tsv","tsvLines","header","parseTSVContents","blockMeta","hasName","parseListContents","DataView","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","newSeriesOptList","seriesOpt","originalData","tryMergeDataOption","magicTypeLang","MagicType","getIcons","availableIcons","icons","seriesOptGenreator","markPoint","markLine","radioTypes","radio","newSeriesOpt","getAxesByScale","currentType","saveAsImageLang","SaveAsImage","unusable","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","open","write","evt","bubbles","cancelable","dispatchEvent","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","needPutOnTop","topOffset","featureName","oldName","featureOpt","isUserFeatureName","Feature","iconStyleModel","iconStyleEmphasisModel","titles","iconPaths","iconName","createIconPaths","iconStatus","ToolboxModel","showTitle","iconStyle","TimelineAxis","coordExtent","TimelineView","_axis","_timer","_currentPointer","_mainGroup","_labelGroup","timelineModel","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","controlPosition","showPlayBtn","showPrevBtn","showNextBtn","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","dimIdx","boundIdx","newGroup","_renderAxisLine","_renderAxisTick","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","normalLabelModel","_renderControl","playState","getPlayState","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","currentIndex","getCurrentIndex","pointerModel","me","onCreate","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","nextState","_pointerChangeTimeline","mousePos","toCoord","_toAxisCoord","targetDataIndex","_findNearestTick","axisCoord","nextIndex","noAnimation","TimelineModel","autoPlay","rewind","playInterval","_names","_initData","setCurrentIndex","isIndexMax","setPlayState","dataArr","idxArr","SliderTimelineModel","checkpointStyle","animationDuration","controlStyle","playIcon","stopIcon","nextIcon","prevIcon","transferItem","itemStyleEmphasis","labelNormal","normal","excludeLabelAttr","timelineOpt","timeline","ec2Types","compatibleEC2","preprocessor","colorUtil","markerHelper","markAreaTransform","maModel","ltCoord","rbCoord","isInifinity","ifMarkLineHasOnlyDim","fromCoord","otherDimIndex","markAreaFilter","getSingleMarkerEndPoint","xPx","yPx","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","coordDimsInfos","optData","createList","__data","labelHoverModel","markArea","markLineTransform","mlModel","baseIndex","mlFrom","mlTo","markLineFilter","updateSingleMarkerEndLayout","isFrom","markLineModel","mlData","fromData","__from","toData","__to","lineDrawMap","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","updateMarkerLayout","mpData","markPointModel","mpModel","symbolDrawMap","symbolDraw","dataOpt","VisualMapView","_getItemAlign","viewData","_getViewData","endsText","_renderEndsText","viewPieceList","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","onHoverLink","hoverLink","findTargetDataIndices","getPieceList","shapeParam","newKey","getSelectedMapKey","visualMapId","VisualMapModel","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","hasSel","pieceInterval","setStop","splitStep","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_handleEnds","_orient","_useHandle","_hoverLinkDataIndices","_hovering","_buildView","_resetInterval","_renderBar","dataRangeText","_updateView","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","barGroup","_applyTransform","shapes","_createBarGroup","createPolygon","getCursor","_dragHandle","textSize","handleThumbs","handleLabels","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicator","indicatorLabel","indicatorLabelPoint","_updateInterval","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","dataInterval","getSelected","sizeExtent","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","textPoint","_showIndicator","cursorValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","hoverLinkDataSize","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","_dispatchHighDown","hoverLinkOnHandle","DEFAULT_BAR_BOUND","ContinuousModel","_resetRange","auto","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","cleanStore","coordId","onPan","newX","newY","wrapAndDispatch","panGetRange","onZoom","zoomGetRange","getRange","dataZoomInfos","disabled","dataZoomInfo","theDataZoomId","theCoordId","allCoordIds","newRecord","createController","typePriority","controllerParams","type_true","type_move","type_false","type_undefined","oneType","zoomLock","roamControllerOpt","containsPoint","throttleRate","generateCoordId","DataZoomView","roams","InsideZoomView","_range","coordInfoList","coordInfo","dataZoomOption","_onPan","_onZoom","lastRange","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","radiusExtent","angleExtent","pointToCoord","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_resetLocation","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","layoutParams","location","targetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","_prepareDataShadowInfo","getShadowDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","thisAxis","thisDim","displaybles","handles","filler","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","handleColor","viewExtent","viewExtend","percentExtent","nonRealtime","handleInterval","handleHeight","_updateDataInfo","labelTexts","calculateDataWindow","valueWindow","_formatLabel","orderedHandleEnds","barTransform","labelPrecision","valueStr","showOrHide","changed","localPoint","dataBackground","fillerColor","handleIcon","handleStyle","showDetail","_dimName","_axisIndex","_valueWindow","_percentWindow","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","useOrigin","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","boundValue","boundPercent","targetSeries","seriesExtent","fixExtentByAxis","calculateDataExtent","dataWindow","valueSpan","setMinMaxSpan","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","calendarModel","rangeData","getRangeInfo","getOrient","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","getCellWidth","getCellHeight","getNextNDay","dataToRect","tl","firstDay","addPoints","formatedDate","getDateInfo","setMonth","getMonth","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","day","_formatterLabel","_yearTextPositionControl","aligns","yearLabel","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","vAlign","monthLabel","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","cellSize","isStart","dayLabel","firstDayOfWeek","getFirstDayOfWeek","lweek","fweek","weekText","CalendarModel","mergeAndNormalizeLayoutParams","raw","Calendar","_rangeInfo","_sw","_sh","_firstDayOfWeek","getFullYear","getDate","getDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","weeks","whNames","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","contentShape","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","rg","reversed","allDay","startDateNum","endDateNum","rangeInfo","nthDay","calendarList","calendar","calendarSeries","brushLang","Brush","_brushMode","isBrushed","brushModel","intervals","command","setAreas","updateController","modelId","brushId","$from","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","brushLink","throttleDelay","inBrush","outOfBrush","setBrushOption","getLineSelectors","selectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","namenda","miu","v3","v4","selector","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","doDispatch","brushSelected","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","bSelector","sel","brushIndex","thisBrushSelected","brushName","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRectBuilders","linkOthers","brushed","hasAxisBrushed","eachActiveState","activeState","stepAParallel","brushModelNotControll","stepAOthers","seriesBrushSelected","getBoundingRectFromMinMax","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","flag","_mapDraw","selectableMixin","GeoModel","_optionModelMap","optionModelMap","regionOpt","scaleLimit","makeAction","PolarAxisPointer","coordValue","axisAngle","coordToPoint","getLabelPosition","axisBuilderAttrs","selfBuilderAttrs","layoutAxis","_splitLine","lineColors","lineCount","splitLines","colorIndex","_splitArea","areaStyleModel","areaColors","splitAreas","prevRadius","elementList","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","lastItem","ticksAngles","_axisLine","_axisTick","tickAngleItem","_axisLabel","commonLabelModel","labelTextAlign","labelTextVerticalAlign","RADIAN","prevAngle","PolarAxisModel","polarIndex","polarId","polarAxisDefaultExtendedOption","foundAxisModel","AngleAxis","dataToAngle","angleToData","RadiusAxis","dataToRadius","radiusToData","_radiusAxis","_angleAxis","axes","minAngle","maxAngle","calRadialBar","radiusSpan","angleSpan","barPolar","eventUtil","vendors","assembleCssText","transitionText","transitionDuration","vendorPrefix","borderName","camelCase","assembleFont","TooltipContent","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","dispatch","onmouseleave","hideLater","_hideDelay","domStyle","setContent","setEnterable","enterable","viewportRootOffset","isShow","findPointFromSeries","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","_manuallyAxisShowTip","pointInfo","manuallyHideTip","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","valueLabelOpt","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","contentSize","viewSize","domWidth","domHeight","calcTooltipPosition","gapH","gapV","getOuterSize","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","indexAxis","lastIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","animationEasingUpdate","scrollDataIndex","setScrollDataIndex","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","__rectSize","controllerGroup","pageIconSize","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","containerGroup","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageButtonGap","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageFormatter","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemRect","itemLoc","startIdx","winRect","getItemRect","startRect","ScrollableLegendModel","pageButtonItemGap","pageButtonPosition","pageIcons","pageIconColor","pageIconInactiveColor","pageTextStyle","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendFilter","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","existElOption","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","mergeNewElOptionToExist","existItem","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","els","createEl","targetElParent","graphicType","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","elOptionStyle","elOptionCleaned","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","elOptions","containerInfo","bounding","cellWidth","cellHeight","dayCount","dataToCoordSize","dataSize","halfSize","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","prepareStyleTransition","targetStyle","oldElStyle","makeRenderItem","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","updateCache","styleEmphasis","barLayout","currentSeriesIndices","userParams","dataInsideLength","dataDimIndex","wrapEncodeDef","currDirty","doCreateOrUpdate","elOptionType","__customGraphicType","__customPathData","__customImagePath","__customText","targetProps","targetOpacity","updateEl","oldChildren","newChildren","diffChildrenByName","processAddUpdate","processRemove","childOption","setIncrementalAndHoverLayer","virtualRoot","treeRoot","getViewRoot","rootDepth","initChildren","isAsc","sortOrder","validDataCount","unitRadian","renderRollupNode","rPerLevel","stillShowZeroSum","renderNode","rStart","rEnd","siblingAngle","ROOT_TO_NODE_ACTION","originViewRoot","resetViewRoot","HIGHLIGHT_ACTION","unhighlight","NodeHighlightPolicy","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPiece","sector","hoverIgnore","normalIgnore","SunburstPieceProto","firstCreate","sectorShape","getRootId","getNodeColor","stateStyle","_updateLabel","highlightPolicy","activeNode","policy","onHighlight","onDownplay","getLabelAttr","labelMinAngle","midAngle","labelPosition","labelPadding","rotateType","stateAttr","newRoot","renderLabelForZeroData","_oldChildren","processNode","newId","oldId","newNode","oldNode","removeNode","doRenderNode","dualTravel","virtualPiece","_onclickEvent","_rootToNode","renderRollUp","targetFound","nodeClick","linkTarget","_viewRoot","completeTreeValue","childValue","thisValue","treeOption","percentPrecision","animationType","dataColor","sunburstLayout","colorList","themeRiverLayout","baseY0","layerSeries","getLayerSeries","timeDim","layerPoints","singleLayer","layerNum","pointNum","sums","temp","computeBaseline","baseLine","ky","layerIndex","_layers","keyGetter","newLayersGroups","process","oldLayersGroups","points0","points1","layerGroup","rectEl","createGridClipShape","_layersSeries","nest","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","comparer","index1","index2","nestestValue","nearestIdx","theValue","htmlName","htmlValue","singleAxisHelper","SingleAxisPointer","getPointDimIndex","AxisPointerView","shadowStyle","modelHelper","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","seriesNestestValue","buildPayloadsBySeries","showPointer","showTooltip","showValueMap","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","updateModelActually","dispatchTooltipActually","lastHighlights","newHighlights","toHighlight","toDownplay","dispatchHighDownActually","SingleAxisView","selfBuilderAttr","splitLineModel","getLineDash","SingleAxis","Single","_init","_adjustAxis","_updateAxisTransform","extentSum","singles","themeRiverVisual","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolRepeat","symbolClip","symbolPosition","symbolPatternSize","symbolMeta","symbolRepeatDirection","output","boundingLength","symbolBoundingData","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categoryDim","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","prepareLineWidth","unitLength","pathLen","absBoundingLength","symbolMargin","hasEndGap","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","unit","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","coordSysRect","pictorialShapeStr","updateBar","PictorialBarSeries","visualSymbol","Heatmap","blurSize","pointSize","maxOpacity","minOpacity","_gradientPixels","colorFunc","isInRange","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","clearRect","gradientPixels","pixelsSingleState","Uint8ClampedArray","HeatmapLayer","visualMapOfThisSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","lng","lat","dataSpan","getIsInContinuousRange","getIsInPiecewiseRange","opacityQuery","lineContain","quadraticContain","LargeLineShape","polyline","segs","findDataIndex","LargeLineDraw","largeLineProto","lineEl","_setCommon","__startIndex","isIncremental","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","_points","accLenArr","_offsets","_length","offsets","linesLayout","_updateLineDraw","trailLength","isSvg","getLayer","_lastZlevel","motionBlur","_showEffect","lastFrameAlpha","_finished","_clearLayer","_lineDraw","hasEffect","isLargeDraw","_hasEffet","_isPolyline","_isLargeDraw","Uint32Arr","Float64Arr","compatEc2","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","progressiveThreshold","effect","linesVisual","updateRipplePath","rippleGroup","effectCfg","ripplePath","EffectSymbol","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","normalizeSymbolSize","showEffectOn","pointsLayout","_symbolDraw","effectSymbolDraw","_updateGroupTransform","effectType","rippleEffect","layoutPoints","candleWidth","barMinWidth","calculateCandleWidth","cDimIdx","vDimIdx","cDim","vDims","openDim","closeDim","lowestDim","highestDim","isSimpleBox","axisDimVal","openVal","closeVal","lowestVal","highestVal","getSign","ocLow","ocHigh","ocLowPoint","getPoint","ocHighPoint","lowestPoint","highestPoint","addBodyEnd","subPixelOptimizePoint","initBaseline","brushRect","makeBrushRect","point1","point2","pmin","pmax","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","seriesItem","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","SKIP_PROPS","CandlestickView","_updateDrawMode","_renderLarge","_renderNormal","_incrementalRenderLarge","_incrementalRenderNormal","createNormalBox","setBoxCommon","createLarge","NormalBoxPath","__simpleBox","transInit","normalItemStyleModel","LargeBoxPath","__sign","elP","elN","setLargeStyle","suffix","CandlestickSeries","color0","borderColor0","animationUpdate","candlestickVisual","candlestickLayout","groupResult","axisList","groupSeriesByAxis","groupItem","seriesCount","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","boxWidth","calculateBase","halfWidth","median","end1","end2","end4","end5","layEndLine","endCenter","layoutSingleSeries","borderColorQuery","globalColors","defaulColor","BoxplotView","constDim","updateNormalBoxData","BoxPath","BoxplotSeries","boxplotVisual","boxplotLayout","minValue","nodeValue","mapValueToColor","customColor","resolveCollisions","nodesByBreadth","nodeGap","ascendingDepth","nodeY","relaxRightToLeft","outEdges","weightedTarget","getEdgeValue","relaxLeftToRight","inEdges","weightedSource","ascendingTargetDepth","ascendingSourceDepth","ascending","nodeWidth","computeNodeValues","iterations","remainEdges","indegreeArr","zeroIndegrees","nextNode","indexEdge","nodeIndex","moveSinksRight","kx","scaleNodeBreadths","computeNodeBreadths","kyArray","ky0","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","setNodePosition","localX","localY","SankeyShape","cpx2","cpy2","halfExtent","curvature","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","dragX","dragY","createGraphFromNodeEdge","SankeySeries","links","localPosition","getEdgeData","rawDataOpt","layoutIterations","sankeyLayout","sankeyVisual","opacityAccessPath","inactiveOpacity","activeOpacity","opacityMap","itemOpacity","DEFAULT_SMOOTH","createLinePoints","addEl","dataGroup","updateElCommon","_dataGroup","_initialized","newDataIndex","oldDataIndex","setEncodeAndDimensions","getRawIndicesByActiveState","theActiveState","parallelIndex","fromAxisAreaSelect","oldAxisGroup","_axisGroup","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","_refreshBrushController","extentLen","activeIntervals","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","parallelAxisModel","setActiveIntervals","setAxisExpand","makeStyleMapper","getActiveState","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","_initDimensions","parallelAxis","ParallelAxis","mathFloor","mathCeil","_axesLayout","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","posInfo","positionTable","rotationTable","axisCoordToPoint","dataDimensions","hasActiveSet","pointCoord","triggerArea","useJump","hasParallelSeries","createParallelIfNeeded","axisOption","parallelOption","mergeAxisOptionFromParallel","parallelVisual","valueArr","isAscending","getSortedIndices","funnelAlign","getLinePoints","offY","labelLineModel","isLabelInside","labelLineLen","FunnelPiece","labelLine","funnelPieceProto","labelText","labelLineHoverModel","funnelPiece","piePiece","FunnelSeries","_defaultLabelLine","labelLineNormalOpt","labelLineEmphasisOpt","minSize","funnelLayout","PointerPath","formatLabel","parsePosition","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","detailModel","positions","bbWidth","bbHeight","viewCoordSys","forceLayout","gravity","pp","friction","warmUp","setFixed","setUnfixed","v12","nLen","n1","n2","repFact","rep","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","getEdgeByIndex","forceInstance","oldStep","getNodeByIndex","stopped","_simpleLayoutHelper","colorQuery","categoriesData","getCategoriesData","categoryNameIdxMap","categoryNames","curveTool","intersectCurveCircle","curvePoints","radiusSquare","nextDiff","tmp0","pts2","__original","originalPoints","straightLineProto","bezierCurveProto","isLine","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","getGraphicEl","fadeInItem","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","layoutAnimation","_startForceLayoutIteration","_layouting","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","isLeft","focusNodeAdjacency","adjacentEdge","unfocusNodeAdjacency","nodeScale","nodeScaleRatio","groupScale","groupZoom","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","sourceName","targetName","circular","rotateLabel","edgeSymbol","edgeSymbolSize","edgeLabel","roam","categoryFilter","categoryVisual","edgeVisual","createView","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","rootRect","viewAbovePath","rootSize","currNode","defaultSize","viewArea","zoomToNodeRatio","currNodeValue","upperHeight","getUpperLabelHeight","estimateRootSize","squareRatio","leafDepth","viewRootLayout","squarify","hideChildren","thisLayout","nodeModel","halfGapWidth","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","visibleMin","deletePoint","filterByThreshold","isLeafRoot","rowFixedLength","best","score","worst","childrenVisibleMin","defaultPosition","targetCenter","nodeLayout","calculateRootPosition","setLayoutInfo","prunning","clipRect","nodeInViewAbovePath","isAboveViewRoot","isInView","childClipRect","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeItemStyleModel","levelItemStyle","visualName","buildVisuals","borderColorSaturation","thisNodeColor","calculateColor","calculateBorderColor","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","mapIdToIndex","getValueVisualDefine","actionTypes","createWrap","doneCallback","elExistsMap","ARRAY_LENGTH","Breadcrumb","makeItemPoints","packEventData","itemNode","selfType","onSelect","normalStyleModel","layoutParam","emptyItemWidth","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","nodeGroup","_oldTree","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","thisViewChildren","oldViewChildren","parentGroup","sameTree","thisNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","animationWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_clearController","rootLayout","findTarget","_zoomToNode","bgEl","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","updateStyle","upperLabelWidth","prepareText","renderContent","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","lasts","prepareAnimationWhenHasOld","zInLevel","zb","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","hoverLayerThreshold","clipWindow","drillDownIcon","breadcrumb","upperLabel","gapWidth","visualDimension","hasColorDefine","globalColorList","modelColor","level0","setDefault","idIndexMap","_idIndexMap","_idIndexMapCount","treemapVisual","treemapLayout","eachAfter","eachBefore","_traversalHelper","_layoutHelper","sep","realRoot","coorX","coorY","finalCoor","rawX","rawY","commonLayout","expandAndCollapse","updateNode","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","__radialOldRawX","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","treeDepth","expandTreeDepth","initialTreeDepth","collapsed","treeLayout","mapLocation","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","needsDrawMap","mainSeries","processedMapType","mapSymbolOffsets","subMapSeries","getRegion","mapModel","_renderSymbols","fullData","fullIndex","polygonGroups","__mapOriginalZ2","geoCoordMap","Russia","United States","United States of America","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","geoFixFuncs","_nameCoordMap","loadGeoJson","containCoord","regionsMap","regionName","specialArea","_regionsMap","fixFunc","getRegionByCoord","getGeoCoord","regionRect","dataSelectableMixin","MapSeries","_createSelectableList","_fillOption","seriesNames","otherIndex","showLegendSymbol","dataRangeHoverLink","mapSymbolLayout","mapDataStatistic","createDataSelectAction","polarOptArr","polarNotRadar","polarOpt","radarIndex","getIndicatorAxes","pointsConverter","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverAreaStyleModel","polygonIgnore","hoverPolygonIgnore","itemHoverStyle","RadarSeries","indicatorAxes","radarModel","_buildAxes","_buildSplitLineAndArea","axisBuilders","indicatorAxis","splitAreaModel","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","valueAxisDefault","defaultsShow","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","getIndicatorModels","IndicatorAxis","Radar","_indicatorAxes","indicatorModel","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","radarSeries","increaseInterval","fixedMin","fixedMax","halfSplitNumber","radarList","radarLayout","LargeSymbolPath","symbolProxy","symbolProxyShape","fillRect","LargeSymbolDraw","largeSymbolProto","endIndex","byteOffset","extrudeShadow","_updateSymbolDraw","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","labelLayoutList","hasLabelRotate","labelLineLen2","leftList","rightList","avoidOverlap","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","updateDataSelected","hasAnimation","selectedOffset","toggleItemSelected","PiePiece","piePieceProto","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","_createClipPath","PieSeries","hoverOffset","avoidLabelOverlap","pieLayout","getBarItemStyle","getBorderLineDash","barItemStyle","coordinateSystemType","isHorizontalOrRadial","elementCreator","removeRect","removeSector","animateProperty","animateTarget","isRadial","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","CartesianAxisView","_splitAreaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","containLabel","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","axisX","axisY","reserved","xScale","yScale","xAxisExtent","yAxisExtent","samplers","nearest","indexSampler","sampling","sampler","_helper","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","idx1","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","lineAnimationDiff","_poly","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","forSymbol","createPolarClipShape","xExtent","yExtent","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","stepPt2","getIsIgnoreFunc","showAllSymbol","isAuto","availSize","dataLen","canShowAllSymbolForCategory","categoryDataDim","labelMap","lineGroup","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","getStackedOnPoints","showSymbol","isIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_updateAnimation","_newPolyline","stopLen","minCoord","maxCoord","coordSpan","getVisualGradient","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","clipOverflow","dataSample","makeCategoryLabelsActually","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","listCacheSet","makeLabelsByCustomizedCategoryInterval","makeLabelsByNumericCategoryInterval","autoInterval","makeAutoCategoryInterval","labelCategoryInterval","cache","categoryInterval","onlyTick","ordinalScale","ordinalExtent","startTick","showMinMax","addItem","tVal","makeCategoryLabels","makeRealNumberLabels","ticksCache","optionTickInterval","labelsResult","makeCategoryTicks","axisRotate","fetchAutoCategoryIntervalCalculationParams","unitSpan","unitW","unitH","maxW","maxH","lastAutoInterval","lastTickCount","scaleProto","intervalScaleProto","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","approxTickNum","originalVal","scaleHelper","TimeScale","stepLvl","_stepLvl","ONE_HOUR","approxInterval","scaleLevelsLen","scaleLevels","bisect","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","useUTC","_ordinalMeta","rank","_dataStackHelper","_completeDimensions","_createDimensions","_symbol","createScale","mixinAxisModelCommonMethods","legend","colorAll","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","taskRecord","_pipelineMap","pCtx","progressiveEnabled","__idxInPipeline","blockIndex","threshold","pipelineMap","stageTaskMap","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","createSeriesStageTask","overallTaskReset","overallProgress","createStub","stubReset","stubOnDirty","agent","__block","createOverallStageTask","upstreamContext","stubProgress","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","legacyFunc","ecModelMock","apiMock","detectSeriseType","mockMethods","cond","maskColor","mask","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesLabel","seriesTpl","displayCnt","dataLabels","keyValues","userConfig","colorAccessPath","calculateStack","stackInfoList","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","stackInfo","stackInfoMap","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","toArr","toObj","isTheme","processSeries","parallelOpt","calendarOpt","radarOpt","geoOpt","regionObj","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","dataRange","componentName","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","oldOption","oldOptionBackup","newParsedOption","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","newCptOpt","oldCptOpt","isRecreate","optionBackup","indices1","indices2","platform","gradientColor","lineType","_updatePathDirty","_curve","someVectorAt","isTangent","polyHelper","v2Min","v2Max","v2Scale","v2Distance","v2Add","v2Clone","v2Sub","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","w2","w3","mathAtan2","cubic","quadratic","windingCubic","nRoots","y0_","y1_","nExtrema","windingQuadratic","y_","windingArc","containPath","isStroke","transformPath","cc","vMag","vRatio","u","vAngle","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathOptions","pathProxy","cs","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathProxyFromString","pathEls","pathList","pathBundle","PATH_COLOR","dotSize","dashSize","GestureMgr","pointPair","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinchEnd","pinchPre","pinchCenter","_event","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","dispatchToElement","setTouchTimer","instance","_touching","_touchTimer","domHandlers","mouseout","toElement","relatedTarget","touchstart","_lastTouchMoment","touchmove","touchend","click","isPointerFromTouch","pointerType","HandlerDomProxy","mountHandlers","handlerNames","makeMouseHandler","handlerDomProxyProto","setCursor","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","clearColor","__used","__drawIndex","__endIndex","getElementCount","initContext","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","__canvasGradient","singleCanvas","nodeName","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layerConfig","_needsManuallyCompositing","mainLayer","__builtin__","_domRoot","domRoot","createRoot","_hoverlayer","_hoverElements","isSingleCanvas","paintAll","_redrawId","layer","_backgroundColor","__hoverMir","elMirror","hoverElements","hoverLayer","displayableSortFunc","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","now","firstEl","error","prevElClipPaths","currentLayer","forcePaint","isDisplayableCulled","prevClipPaths","isClipPathChanged","doClip","insertLayer","layersMap","prevLayer","isLayerValid","prevDom","eachLayer","eachOtherLayer","getLayers","updatePrevLayer","incrementalLayerCount","layerConfig","_zlevel","delLayer","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","displayList","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","imgShape","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","easingFuncs","_life","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","Draggable","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","SILENT","EmptyProxy","painterRoot","_hovered","setHandlerProxy","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","eveType","makeEventPacket","exclude","hoverCheckResult","_downEl","_downPoint","_upEl"],"mappings":"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","file":"0.55eb0a580dcd4a390e76.js","sourcesContent":["/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar matrix = require(\"../core/matrix\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    if (typeof val === 'string' && val.indexOf('NaN') > -1) {\n      console.log(val);\n    }\n\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation || 0;\n    var transform = matrix.create(); // Apply textRotate to element matrix\n\n    matrix.rotate(transform, el.transform, rotate);\n    setTransform(textSvgEl, transform);\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendComponentView({\n  type: 'single'\n});","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function () {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  batch.length && record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n\n  if (!layout) {\n    console.log(node.getLayout());\n  }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","var _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function (ecModel) {\n    this._clear();\n  },\n  _clear: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 5e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n        var itemModel = node.getModel();\n        var customColor = itemModel.get('itemStyle.color');\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n * \n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  while (zeroIndegrees.length) {\n    zrUtil.each(zeroIndegrees, function (node) {\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n      zrUtil.each(node.outEdges, function (edge) {\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0) {\n          nextNode.push(targetNode);\n        }\n      });\n    });\n    ++x;\n    zeroIndegrees = nextNode;\n    nextNode = [];\n  }\n\n  for (var i = 0; i < remainEdges.length; i++) {}\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // If the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n      var y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n      var y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    var draggable = seriesModel.get('draggable');\n\n    if (draggable) {\n      nodeData.eachItemGraphicEl(function (el, dataIndex) {\n        el.drift = function (dx, dy) {\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      });\n    }\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // control if the node can move or not\n    draggable: true,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function () {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(parallelVisual);","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","var Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","var textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;"],"sourceRoot":""}